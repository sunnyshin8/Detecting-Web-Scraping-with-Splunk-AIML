# props.conf - Field extractions for client_hostname.csv (IP hostname resolution data)
# This configuration helps Splunk parse and extract fields for web scraping infrastructure analysis

[client_hostname_data]
# Basic source type configuration
category = Network
description = Client IP Hostname Resolution Data
pulldown_type = 1

# Time extraction settings (use current time since no timestamp in data)
SHOULD_LINEMERGE = false
LINE_BREAKER = ([\r\n]+)
TIMESTAMP_FIELDS = _indextime
TZ = EST
MAX_TIMESTAMP_LOOKAHEAD = 25

# CSV parsing configuration
KV_MODE = none
HEADER_FIELD_LINE_NUMBER = 1
FIELD_DELIMITER = ,
FIELD_QUOTE = "

# Field extractions for client_hostname.csv format
# Fields: client, hostname, alias_list, address_list
EXTRACT-client_ip = ^(?<client_ip>[^,]+),
EXTRACT-hostname = ^[^,]+,(?<hostname>[^,]+),
EXTRACT-alias_list = ^[^,]+,[^,]+,(?<alias_list>[^,]+),
EXTRACT-address_list = ^[^,]+,[^,]+,[^,]+,(?<address_list>.*)$

# CIM field mapping for Network data model
EVAL-src = client_ip
EVAL-dest_host = hostname
EVAL-src_ip = client_ip

# Hostname analysis fields
EVAL-has_hostname = if(hostname != client_ip, "true", "false")
EVAL-hostname_error = if(match(hostname, "Errno"), "true", "false")
EVAL-has_reverse_dns = if(hostname != client_ip AND NOT match(hostname, "Errno"), "true", "false")

# Infrastructure detection indicators
EVAL-hosting_provider = case(
    match(hostname, "(?i)aws|amazon"), "AWS",
    match(hostname, "(?i)digitalocean|do-"), "DigitalOcean", 
    match(hostname, "(?i)linode"), "Linode",
    match(hostname, "(?i)vultr"), "Vultr",
    match(hostname, "(?i)ovh"), "OVH",
    match(hostname, "(?i)hetzner"), "Hetzner",
    match(hostname, "(?i)google|gce"), "Google Cloud",
    match(hostname, "(?i)azure|microsoft"), "Azure",
    match(hostname, "(?i)cloudflare"), "Cloudflare",
    match(hostname, "(?i)akamai"), "Akamai",
    1==1, "Unknown"
)

# Geographic/ISP detection from hostname patterns
EVAL-country_indicator = case(
    match(hostname, "\.ir$|\.ir\."), "Iran",
    match(hostname, "\.de$|\.de\."), "Germany", 
    match(hostname, "\.uk$|\.uk\."), "United Kingdom",
    match(hostname, "\.fr$|\.fr\."), "France",
    match(hostname, "\.cn$|\.cn\."), "China",
    match(hostname, "\.ru$|\.ru\."), "Russia",
    match(hostname, "\.jp$|\.jp\."), "Japan",
    1==1, "Unknown"
)

# Bot/hosting infrastructure indicators
EVAL-bot_infrastructure_score = case(
    hosting_provider != "Unknown", 8,
    match(hostname, "(?i)server|host|vps|cloud|compute"), 6,
    match(hostname, "(?i)bot|crawl|spider"), 9,
    has_reverse_dns == "false", 4,
    1==1, 0
)

# ISP pattern detection
EVAL-isp_pattern = case(
    match(hostname, "(?i)adsl|dsl|broadband|residential"), "Residential",
    match(hostname, "(?i)business|corporate|enterprise"), "Business",
    match(hostname, "(?i)datacenter|hosting|server|vps"), "Hosting",
    match(hostname, "(?i)mobile|cellular|3g|4g|5g"), "Mobile",
    1==1, "Unknown"
)

# Suspicious pattern detection
EVAL-suspicious_pattern = case(
    match(hostname, "(?i)proxy|vpn|tor|anonymizer"), "Anonymization",
    match(hostname, "(?i)bot|crawl|spider|scrape"), "Bot_Infrastructure", 
    match(hostname, "(?i)hack|exploit|attack"), "Malicious",
    match(client_ip, "^10\.|^192\.168\.|^172\.(1[6-9]|2[0-9]|3[01])\."), "Private_IP",
    1==1, "None"
)

# Lookup tables for enrichment
LOOKUP-geo_location = geo_ip_lookup client_ip OUTPUTNEW city,country,lat,lon,region
LOOKUP-threat_intel = threat_ip_lookup client_ip OUTPUTNEW threat_category,malware_family,last_seen

[source::*client_hostname.csv]
sourcetype = client_hostname_data
